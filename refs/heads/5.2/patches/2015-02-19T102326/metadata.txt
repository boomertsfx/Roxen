subject: Roxen 5.2: Multiple fixes:
from: 33f0927e67c59bf7e0a17a57f9eba0dfc464ae65
to: c9fba7dedb496ae1550e36ba501a6a0ca25f26c7
originator: wellhardh@roxen.com
depends: 2014-09-25T172358
restart: true

Multiple fixes:

  * Pike 8.0: Unset variables are UNDEFINED.
    
    Use object_variablep() to test whether a variable exists in an object
    (that's what it's for...) instead of zero_type() to check if it doesn't.
    
    Fixes issues with the config interface and Pike 8.0.

  * Pike 8.0: String.Buffer contains a sprintf().
    
    PikeCompiler has inherited String.Buffer, so we need to make sure
    not to call the inherited sprintf() when we want the global one.
    
    Fixes "Bad argument 1 to add(). Expected string|String.Buffer.".

  * Pike 8.0: #if efun() is obsolete since 10 years back.
    
    Reduce warnings from cpp().

  * Pike 8.0: Add support for some new SSL features.
    
    * Filter suites based on key length and key exchange method.
    
    * Reject clients with old versions of SSL/TLS.

  * SSL: Disable support for SSL 3.0 by default.
    
    Requires recent Pike 7.8 or later.
    
    Blocks the POODLE attack.

  * SSL: The protocol defaults in Pike and Roxen may differ.
    
    The callback set with set_changed_callback() is only called if
    the value differs from or is changed to the default.
    
    Fixes disabling of SSL 3.0 by default on Pike 7.8.

  * Only complain about cache entry calculations under -DDEBUG.

  * Perform breadth-first traversal in collect_things_recur.
    
    This should make results more accurate when the traversal limit is reached.
    Also use a mapping to track visited things, to improve performance.

  * Bugfix in CacheTagEntry.cache_count_memory.
    
    Collected objects are now provided individually to Pike.count_memory, rather
    than just counting the result array (which defeats the purpose of collecting
    all those objects to begin with).

  * Improve cache size calculation of PCode objects in general.
    
    Also trick the RAM cache manager to set a low cost on entries coming
    from persistent storage.

  * Protocols: Improved support for reverse proxys. Fixes [bug 7385].
    
    Use the actual port number rather than the port number from the Host-
    header when determining which configuration a request belongs to. They
    may differ when eg the request comes via a proxy on a different port.

  * Fix backtrace that occurred when quick_host_to_ip was called with "".
